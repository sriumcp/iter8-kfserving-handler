name: Build, test and push iter8-kfserving-handler

on:
  push:
    branches:
      # Run tests and code-coverage/vet/lint when code is pushed to main. Publish `main` as Docker `latest` image.
      - main 
    tags:
      # Run tests and code-coverage/vet/lint when code is pushed to main. Publish `v1.2.3` tags as releases.
      - v*
  pull_request: # Run tests for any PRs.

jobs:
  # Ensure tests pass on PRs.
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Test
      run: go test ./...
    - name: Get golint
      run: go get -u golang.org/x/lint/golint
    - name: Run Vet & Lint
      run: |
        go vet ./...
        echo $(go list -f {{.Target}} golang.org/x/lint/golint)
        $(go list -f {{.Target}} golang.org/x/lint/golint) -set_exit_status=1 ./...      

  # Compute and upload code coverage
  code-coverage:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build
      run: go build .
    - name: Test With Coverage
      run: go test -gcflags=-l -v  -coverprofile=coverage.txt -covermode=atomic ./...
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  # Push iter8-kfserving-handler image to dockerhub
  build-and-push:
    # Ensure test job passes before pushing image.		
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SECRET }}
    - name: Get version
      run: |
        tarref=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tagref
        if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
          echo "VERSION=$(echo $tarref | sed -e 's/^v//')" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == *"main" ]]; then
          echo "VERSION=latest" >> $GITHUB_ENV
        fi
    - name: Get owner and repo
      run: |
        ownerrepo=${{ github.repository }}
        owner=$(echo $ownerrepo | cut -f1 -d/)
        if [[ "$owner" == "iter8-tools" ]]; then
          owner=iter8
        fi
        echo "OWNER=$owner" >> $GITHUB_ENV
        echo "REPO=$(echo $ownerrepo | cut -f2 -d/)" >> $GITHUB_ENV
    - uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ env.OWNER }}/${{ env.REPO }}:${{ env.VERSION }}
        push: true
